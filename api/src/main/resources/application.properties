#Keycloak/OAuth properties
security.oauth2.resource.jwt.key-value=${KEYCLOAK_PUBLIC_KEY}

#logging Properties
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL}
logging.level.ca.bc.gov.educ.api.pen.services=${APP_LOG_LEVEL}
logging.level.org.springframework.boot.autoconfigure.logging=${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
spring.mvc.log-request-details=${SPRING_SHOW_REQUEST_DETAILS}
logging.pattern.console=%d | [${HOSTNAME}] | %clr(%5p) | [%t] | [%logger{36}:%L] | [%M] | %msg%n

#DB Properties
spring.datasource.url=${JDBC_URL}
spring.datasource.username=${ORACLE_USERNAME}
spring.datasource.password=${ORACLE_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.hibernate.ddl-auto=none
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=2

spring.jackson.deserialization.fail-on-unknown-properties=false
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.datasource.hikari.max-lifetime=120000
spring.jmx.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.table=FLYWAY_SCHEMA_HISTORY
spring.flyway.baseline-version=0
spring.flyway.enabled=true
logging.file.name=/logs/app.log
logging.logback.rollingpolicy.max-file-size=20MB
logging.logback.rollingpolicy.clean-history-on-start=true
logging.logback.rollingpolicy.max-history=1
logging.pattern.file=%d | [${HOSTNAME}] | %clr(%5p) | [%t] | [%logger{36}:%L] | [%M] | %msg%n
server.undertow.threads.io=16
server.undertow.threads.worker=128
#Print the queries
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}

#Client details to get token to make api calls.
client.id=${CLIENT_ID}
client.secret=${CLIENT_SECRET}
url.token=${TOKEN_URL}

#Below are for making API calls to Student after getting the token.
url.api.student=${STUDENT_API_URL}
spring.data.redis.repositories.enabled=false
#This is used to run redis in local without cluster mode, in application-local.properties change this to local
environment=DEV

#Add Redis cluster node address. Use follow format -- <code>host:port</code>. since it is a service in OS, we just give one entry.
url.redis=${REDIS_URL}
nats.spring.server=${NATS_URL}
nats.spring.max-reconnect=-1
nats.spring.connection-name=pen-services-api
nats.spring.connection-timeout=10000
